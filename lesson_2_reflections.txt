What happens when you initialize a repository? Why do you need to do it?

  It adds the necessary metadata files to keep track of the versioning.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  The staging area contains files that are going to be committed.
  Not sure what value it offers really, when everything can be undone.

How can you use the staging area to make sure you have one commit per logical
change?

  By comparing what is in the working dir and staging area. And only committing
  changes for the relevant feature/fix.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  When adding a new experimental feature or, sometimes, fixing and bug while
  continuing to work on the main branch. Branches enables working on different
  things without wrecking the working source.

How do the diagrams help you visualize the branch structure?

  They clearly show when a branch was created, which commits belong to which branches
  and what can't be reached in the currently checkout out files.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
  Combines all the commits of both branches. The diagram clearlt shows what is
  being merged,

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

  Huge pro - no need to manually review all changes. Only con is conflicts still
  need to be manually fixed.
